{"version":3,"sources":["ng://ngx-extended-pdf-viewer/lib/default-options.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.component.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.service.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.module.ts"],"names":["defaultOptions","cursorToolOnLoad","defaultUrl","defaultZoomValue","disableHistory","disablePageLabels","enablePrintAutoRotate","enableWebGL","eventBusDispatchToDOM","externalLinkRel","externalLinkTarget","historyUpdateUrl","imageResourcesPath","maxCanvasPixels","pdfBugEnabled","renderer","renderInteractiveForms","sidebarViewOnLoad","scrollModeOnLoad","spreadModeOnLoad","textLayerMode","useOnlyCssZoom","viewOnLoad","cMapPacked","cMapUrl","disableAutoFetch","disableCreateObjectURL","disableFontFace","disableRange","disableStream","isEvalSupported","maxImageSize","pdfBug","postMessageTransfers","verbosity","workerPort","workerSrc","NgxExtendedPdfViewerComponent","Object","defineProperty","prototype","url","Uint8Array","this","_src","buffer","Blob","URL","createObjectURL","length","test","console","warn","base64","binary_string","window","atob","len","bytes","i","charCodeAt","src","_height","h","_this","minHeight","undefined","height","setTimeout","checkHeight","_showSidebarButton","show","factor","navigator","userAgent","Number","_mobileFriendlyZoom","replace","findbarLeft","toString","zoom","isIE","showSidebarButton","toolbarWidth","findbarTop","secondaryToolbarRight","mobileFriendlyZoom","_top","endsWith","substring","calcViewerPositionTop","viewerPositionTop","isPrimaryMenuVisible","emitZoomChange","selectedIndex","sizeSelector","nativeElement","s","options","value","label","zoomChange","emit","emitZoomChangeAfterDelay","ngOnInit","langLinks","document","querySelectorAll","querySelector","useBrowserLocale","error","o","attributes","callback","e","removeEventListener","initTimeout","openPDF","delayFirstView","addEventListener","ngxExtendedPdfViewerInitialized","overrideDefaultSettings","primaryMenuVisible","isSecondaryMenuVisible","showSecondaryToolbarButton","webViewerLoad","PDFViewerApplication","appConfig","PDFViewerApplicationOptions","set","language","isViewerEmbedded","pc","getElementById","getElementsByTagName","appendChild","container","getElementsByClassName","clientHeight","includes","mh","innerHeight","getBoundingClientRect","top","onPageChange","inputField","page","isNaN","pageChange","onSpreadChange","newSpread","spreadChange","key","setZoom","filenameForDownload","showHandToolButton","showSidebarOnLoad","spread","pdfViewer","spreadMode","onResize","listenToURL","pdfLinkService","setHash","selectCursorTool","eventBus","on","x","pagesLoaded","nameddest","navigateTo","pageRendered","password","open","dispatch","tool","handTool","ngOnDestroy","clearTimeout","app","cleanup","close","_boundEvents","unbindWindowEvents","bus","unbindEvents","_listeners","body","topLevelElements","children","item","id","removeChild","showPagingButtons","showPropertiesButton","showRotateButton","showScrollingButton","showSpreadButton","showBookmarkButton","showDownloadButton","showFindButton","showOpenFileButton","showPresentationModeButton","showPrintButton","showZoomButtons","ngOnChanges","changes","zoomAsNumber","String","currentScaleValue","resizeTimeout","doResize","toolbar_1","width","clientWidth","innerWidth","mediumElements","elt","classList","add","remove","smallElements","tiny","Component","args","selector","template","encapsulation","ViewEncapsulation","None","Input","Output","ViewChild","backgroundColor","EventEmitter","NgxExtendedPdfViewerService","find","text","setAttribute","dispatchEvent","Event","findNext","button","click","findPrevious","Injectable","providedIn","NgxExtendedPdfViewerModule","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"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","sourcesContent":["export const defaultOptions = {\n  cursorToolOnLoad: 0,\n  defaultUrl: '',\n  defaultZoomValue: '',\n  disableHistory: false,\n  disablePageLabels: false,\n  enablePrintAutoRotate: false,\n  enableWebGL: false,\n  eventBusDispatchToDOM: false,\n  externalLinkRel: 'noopener noreferrer nofollow',\n  externalLinkTarget: 0,\n  historyUpdateUrl: false,\n  imageResourcesPath: './images/',\n  maxCanvasPixels: 16777216,\n  pdfBugEnabled: false,\n  renderer: 'canvas',\n  renderInteractiveForms: false,\n  sidebarViewOnLoad: -1,\n  scrollModeOnLoad: -1,\n  spreadModeOnLoad: -1,\n  textLayerMode: 1,\n  useOnlyCssZoom: false,\n  viewOnLoad: 0,\n  cMapPacked: true,\n  cMapUrl: '../web/cmaps/',\n  disableAutoFetch: false,\n  disableCreateObjectURL: false,\n  disableFontFace: false,\n  disableRange: false,\n  disableStream: false,\n  isEvalSupported: true,\n  maxImageSize: -1,\n  pdfBug: false,\n  postMessageTransfers: true,\n  verbosity: 1,\n  workerPort: null,\n  workerSrc: '../build/pdf.worker.js'\n};\n","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  ViewChild\n} from '@angular/core';\nimport { PagesLoadedEvent } from './pages-loaded-event';\nimport { PageRenderedEvent } from './page-rendered-event';\nimport { defaultOptions } from './default-options';\n\n@Component({\n  selector: 'ngx-extended-pdf-viewer',\n  templateUrl: './ngx-extended-pdf-viewer.component.html',\n  styleUrls: ['./viewer-with-images-2.2.199.css', './ngx-extended-pdf-viewer.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxExtendedPdfViewerComponent implements OnInit, OnChanges, OnDestroy {\n  public static ngxExtendedPdfViewerInitialized = false;\n\n  private _src: string | ArrayBuffer;\n\n  private resizeTimeout: any = null;\n\n  /**\n   * Number of milliseconds to wait between initializing the PDF viewer and loading the PDF file.\n   * Most users can let this parameter safely at it's default value of zero.\n   * Set this to 1000 or higher if you run into timing problems (typically caused by loading the locale files\n   * after the PDF files, so they are not available when the PDF viewer is initialized).\n   */\n  @Input()\n  delayFirstView = 0;\n\n  /** store the timeout id so it can be canceled if user leaves the page before the PDF is shown */\n  private initTimeout: any;\n\n  public primaryMenuVisible = true;\n\n  @Input()\n  public set src(url: string | ArrayBuffer | Uint8Array) {\n    if (url instanceof Uint8Array) {\n      this._src = (<Uint8Array>url).buffer;\n    } else if (url instanceof Blob) {\n      this._src = URL.createObjectURL(url);\n    } else if (typeof url === 'string') {\n      this._src = url;\n      if (url.length > 980) {\n        // minimal length of a base64 encoded PDF\n        if (url.length % 4 === 0) {\n          if (/^[a-zA-Z\\d\\/+]+={0,2}$/.test(url)) {\n            console.warn('The URL looks like a base64 encoded string. If so, please use the attribute base64 instead of src');\n          }\n        }\n      }\n    } else {\n      this._src = url;\n    }\n  }\n\n  @Input()\n  public set base64Src(base64: string) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binary_string.charCodeAt(i);\n    }\n    this.src = bytes.buffer;\n  }\n\n  public minHeight: string | undefined = undefined;\n\n  private _height = '100%';\n\n  @Input()\n  public set height(h: string) {\n    this.minHeight = undefined;\n    if (h) {\n      this._height = h;\n    } else {\n      this.height = '100%';\n    }\n    setTimeout(() => {\n      this.checkHeight();\n    });\n  }\n\n  public get height() {\n    return this._height;\n  }\n\n  /**\n   * If this flag is true, this components adds a link to the locale assets. The pdf viewer\n   * sees this link and uses it to load the locale files automatically.\n   * @param useBrowserLocale boolean\n   */\n  @Input()\n  public useBrowserLocale = false;\n\n  @Input()\n  public backgroundColor = '#e8e8eb';\n\n  /** Allows the user to define the name of the file after clicking \"download\" */\n  @Input()\n  public filenameForDownload = 'document.pdf';\n\n  /** Override the default locale. This must be the complete locale name, such as \"es-ES\". The string is allowed to be all lowercase.\n   */\n  @Input()\n  public language: string | undefined = undefined;\n\n  /** By default, listening to the URL is deactivated because often the anchor tag is used for the Angular router */\n  @Input()\n  public listenToURL = false;\n\n  /** Navigate to a certain \"named destination\" */\n  @Input()\n  public nameddest: string | undefined = undefined;\n\n  /** allows you to pass a password to read password-protected files */\n  @Input()\n  public password: string | undefined = undefined;\n\n  public _showSidebarButton = true;\n\n  public viewerPositionTop = '32px';\n\n  public get showSidebarButton() {\n    return this._showSidebarButton;\n  }\n  @Input()\n  public set showSidebarButton(show: boolean) {\n    this._showSidebarButton = show;\n    const isIE = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    let factor = 1;\n    if (isIE) {\n      factor = Number((this._mobileFriendlyZoom || '100').replace('%', '')) / 100;\n    }\n\n    if (this._showSidebarButton) {\n      this.findbarLeft = (68 * factor).toString() + 'px';\n    } else {\n      this.findbarLeft = '0px';\n    }\n  }\n\n  /** If [showSideBarButton]=\"true\", do you want the sidebar to be shown by default ([showSidebarOnLoad])=\"true\")\n   * or not? By default, this flag is undefined, telling the PDF viewer to use the last setting used with this particular\n   * document, or to hide the sidebar if the document is opened for the first time.\n   */\n  @Input()\n  public showSidebarOnLoad: boolean | undefined = undefined;\n\n  @Input()\n  public showFindButton = true;\n  @Input()\n  public showPagingButtons = true;\n  @Input()\n  public showZoomButtons = true;\n  @Input()\n  public showPresentationModeButton = false;\n  @Input()\n  public showOpenFileButton = true;\n  @Input()\n  public showPrintButton = true;\n  @Input()\n  public showDownloadButton = true;\n  @Input()\n  public showBookmarkButton = true;\n  @Input()\n  public showSecondaryToolbarButton = true;\n  @Input()\n  public showRotateButton = true;\n  @Input()\n  public handTool = true;\n  @Input()\n  public showHandToolButton = false;\n  @Input()\n  public showScrollingButton = true;\n  @Input()\n  public showSpreadButton = true;\n  @Input()\n  public showPropertiesButton = true;\n\n  @Input()\n  public spread: 'off' | 'even' | 'odd';\n\n  @Output()\n  public spreadChange = new EventEmitter<'off' | 'even' | 'odd'>();\n\n  @Input()\n  public page: number | undefined = undefined;\n\n  @Output()\n  public pageChange = new EventEmitter<number | undefined>();\n\n  @Output()\n  public pagesLoaded = new EventEmitter<PagesLoadedEvent>();\n\n  @Output()\n  public pageRendered = new EventEmitter<PageRenderedEvent>();\n\n  /** Legal values: undefined, 'auto', 'page-actual', 'page_fit', 'page-width', or '50' (or any other percentage) */\n  @Input()\n  public zoom: string | number | undefined = undefined;\n\n  @Output()\n  public zoomChange = new EventEmitter<string | number | undefined>();\n\n  /** This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").\n   */\n  @Input() _mobileFriendlyZoom = '100%';\n\n  public toolbarWidth = '100%';\n\n  // dirty IE11 hack - temporary solution\n  public findbarTop: string | undefined = undefined;\n\n  // dirty IE11 hack - temporary solution\n  public findbarLeft: string | undefined = undefined;\n\n  // dirty IE11 hack - temporary solution\n  public secondaryToolbarRight: string | undefined = undefined;\n\n  public get mobileFriendlyZoom() {\n    return this._mobileFriendlyZoom;\n  }\n  /*\n   * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").*/\n  @Input()\n  public set mobileFriendlyZoom(zoom: string) {\n    // tslint:disable-next-line:triple-equals - the type conversion is intended\n    if (zoom == 'true') {\n      zoom = '150%';\n      // tslint:disable-next-line:triple-equals - the type conversion is intended\n    } else if (zoom == 'false') {\n      zoom = '100%';\n    }\n    this._mobileFriendlyZoom = zoom;\n    const isIE = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    let factor = 1;\n    if (isIE) {\n      factor = Number((zoom || '100').replace('%', '')) / 100;\n    }\n    if (this.showSidebarButton) {\n      this.findbarLeft = (68 * factor).toString() + 'px';\n    } else {\n      this.findbarLeft = '0px';\n    }\n    if (isIE) {\n      // dirty, temporary hack\n      this.toolbarWidth = (100 / factor).toString() + '%';\n      this.findbarTop = (32 * factor).toString() + 'px';\n      this.secondaryToolbarRight = (252 * (factor - 1)).toString() + 'px';\n    }\n  }\n\n  /** Deprecated. Please use [mobileFriendlyZoom] instead.\n   * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").*/\n  @Input()\n  public set mobileZoom(mobileFriendlyZoom: string) {\n    this.mobileFriendlyZoom = mobileFriendlyZoom;\n  }\n\n  @ViewChild('sizeSelector') sizeSelector: any;\n\n  private _top: string | undefined = undefined;\n\n  public get sidebarPositionTop(): string {\n    if (this._top) {\n      return this._top;\n    }\n    if (this.mobileFriendlyZoom) {\n      if (this.mobileFriendlyZoom.endsWith('%')) {\n        const zoom = Number(this.mobileFriendlyZoom.substring(0, this.mobileFriendlyZoom.length - 1));\n        return (0.32 * zoom).toString() + 'px';\n      }\n      if (this.mobileFriendlyZoom.endsWith('px')) {\n        return this.mobileFriendlyZoom;\n      }\n    }\n    return '32px';\n  }\n  public calcViewerPositionTop(): void {\n    if (this._top) {\n      this.viewerPositionTop = this._top;\n      return;\n    }\n    if (this.mobileFriendlyZoom) {\n      if (this.mobileFriendlyZoom.endsWith('%')) {\n        const zoom = Number(this.mobileFriendlyZoom.substring(0, this.mobileFriendlyZoom.length - 1));\n        if (!this.isPrimaryMenuVisible()) {\n          this.viewerPositionTop = '0';\n        } else {\n          this.viewerPositionTop = (1 + 0.32 * zoom).toString() + 'px';\n        }\n        return;\n      }\n      if (this.mobileFriendlyZoom.endsWith('px')) {\n        this.viewerPositionTop = this.mobileFriendlyZoom;\n        return;\n      }\n    }\n    if (this.isPrimaryMenuVisible()) {\n      this.viewerPositionTop = '32px';\n    } else {\n      this.viewerPositionTop = '0';\n    }\n  }\n\n  constructor() {}\n\n  public emitZoomChange(): void {\n    const selectedIndex = this.sizeSelector.nativeElement.selectedIndex;\n    if (selectedIndex) {\n      const s = this.sizeSelector.nativeElement.options[selectedIndex] as HTMLOptionElement;\n      let value: number | string = s.label;\n\n      if (value.endsWith('%')) {\n        value = Number(value.replace('%', ''));\n      } else {\n        value = s.value;\n      }\n      this.zoomChange.emit(value);\n    }\n  }\n\n  public emitZoomChangeAfterDelay(): void {\n    setTimeout(() => {\n      this.emitZoomChange();\n    }, 10);\n  }\n\n  ngOnInit() {\n    const langLinks = document.querySelectorAll('link[type=\"application/l10n\"]');\n    const langCount = langLinks.length;\n\n    if (langCount === 0) {\n      const dict = document.querySelector('script[type=\"application/l10n\"]');\n      if (!dict) {\n        if (!this.useBrowserLocale) {\n          console.error(\n            \"If you set the attribute 'useBrowserLocale' to false, you must provide the translations yourself in a script or link tag.\"\n          );\n          console.error('The easiest way to do this is to add them to the index.html.');\n        }\n      } else if (this.useBrowserLocale) {\n        console.error(\n          \"Please set the attribute 'useBrowserLocale' to false if you provide the translations yourself in a script or link tag.\"\n        );\n      }\n    } else if (this.useBrowserLocale) {\n      const o = langLinks[0].attributes['origin'];\n      if (o && o.value !== 'ngx-extended-pdf-viewer') {\n        console.error(\n          \"Please set the attribute 'useBrowserLocale' to false if you provide the translations yourself in a script or link tag.\"\n        );\n      }\n    }\n    const callback = e => {\n      document.removeEventListener('localized', callback);\n      this.initTimeout = setTimeout(() => {\n        this.openPDF();\n      }, this.delayFirstView);\n    };\n\n    document.addEventListener('localized', callback);\n\n    if (NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      console.error(\"You're trying to open two instances of the PDF viewer. Most likely, this will result in errors.\");\n    }\n    document.addEventListener('webviewerloaded', () => {\n      this.overrideDefaultSettings();\n    });\n\n    setTimeout(() => {\n      // This initializes the webviewer, the file may be passed in to it to initialize the viewer with a pdf directly\n      this.primaryMenuVisible = true;\n      if (!this.isSecondaryMenuVisible()) {\n        this.showSecondaryToolbarButton = false;\n      }\n      if (!this.showSecondaryToolbarButton) {\n        if (!this.isPrimaryMenuVisible()) {\n          this.primaryMenuVisible = false;\n        }\n      }\n      this.calcViewerPositionTop();\n      (<any>window).webViewerLoad();\n      (<any>window).PDFViewerApplication.appConfig.defaultUrl = ''; // IE bugfix\n      (<any>window).PDFViewerApplicationOptions.set('locale', this.language);\n\n      (<any>window).PDFViewerApplication.isViewerEmbedded = true;\n\n      const pc = document.getElementById('printContainer');\n      if (pc) {\n        document.getElementsByTagName('body')[0].appendChild(pc);\n      }\n    }, 0);\n  }\n\n  public checkHeight(): void {\n    const container = document.getElementsByClassName('zoom')[0];\n    if (container.clientHeight === 0 && this._height.includes('%')) {\n      const available = window.innerHeight;\n      const rect = container.getBoundingClientRect();\n      const top = rect.top;\n      let mh = available - top;\n      const factor = Number(this._height.replace('%', ''));\n      mh = (mh * factor) / 100;\n      if (mh > 100) {\n        this.minHeight = mh + 'px';\n      } else {\n        this.minHeight = '100px';\n      }\n    }\n  }\n\n  public onPageChange(): void {\n    setTimeout(() => {\n      const inputField = document.getElementById('pageNumber') as HTMLInputElement;\n      let page: number | undefined = Number(inputField.value);\n      if (isNaN(page)) {\n        page = undefined;\n      }\n      this.pageChange.emit(page);\n    });\n  }\n\n  public onSpreadChange(newSpread: 'off' | 'even' | 'odd'): void {\n    this.spreadChange.emit(newSpread);\n  }\n\n  private overrideDefaultSettings() {\n    const options = (<any>window).PDFViewerApplicationOptions;\n    // tslint:disable-next-line:forin\n    for (const key in defaultOptions) {\n      options.set(key, defaultOptions[key]);\n    }\n    options.set('disablePreferences', true);\n    this.setZoom();\n\n    if ((<any>window).PDFViewerApplication.appConfig) {\n      (<any>window).PDFViewerApplication.appConfig.filenameForDownload = this.filenameForDownload;\n    } else {\n      options.set('filenameForDownload', this.filenameForDownload);\n    }\n\n    options.set('textLayerMode', this.showHandToolButton ? 1 : 0);\n\n    if (this.showSidebarButton) {\n      if (this.showSidebarOnLoad !== undefined) {\n        (<any>window).PDFViewerApplication.sidebarViewOnLoad = this.showSidebarOnLoad ? 1 : 0;\n        if ((<any>window).PDFViewerApplication.appConfig) {\n          (<any>window).PDFViewerApplication.appConfig.sidebarViewOnLoad = this.showSidebarOnLoad ? 1 : 0;\n        }\n        options.set('sidebarViewOnLoad', this.showSidebarOnLoad ? 1 : 0);\n      }\n    } else {\n      (<any>window).PDFViewerApplication.sidebarViewOnLoad = 0;\n      options.set('sidebarViewOnLoad', 0);\n      if ((<any>window).PDFViewerApplication.appConfig) {\n        (<any>window).PDFViewerApplication.appConfig.sidebarViewOnLoad = 0;\n      }\n    }\n\n    if (this.spread === 'even') {\n      options.set('spreadModeOnLoad', 2);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 2;\n      }\n      this.onSpreadChange('even');\n    } else if (this.spread === 'odd') {\n      options.set('spreadModeOnLoad', 1);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 1;\n      }\n      this.onSpreadChange('odd');\n    } else {\n      options.set('spreadModeOnLoad', 0);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 0;\n      }\n      this.onSpreadChange('off');\n    }\n  }\n\n  private openPDF() {\n    NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized = true;\n    this.onResize();\n    if (!this.listenToURL) {\n      (<any>window).PDFViewerApplication.pdfLinkService.setHash = function() {};\n    }\n    this.initTimeout = null;\n    this.selectCursorTool();\n    (<any>window).PDFViewerApplication.eventBus.on('pagesloaded', (x: PagesLoadedEvent) => {\n      this.pagesLoaded.emit(x);\n      if (this.nameddest) {\n        (<any>window).PDFViewerApplication.pdfLinkService.navigateTo(this.nameddest);\n      }\n      this.setZoom();\n    });\n    (<any>window).PDFViewerApplication.eventBus.on('pagerendered', (x: PageRenderedEvent) => {\n      this.pageRendered.emit(x);\n    });\n    this.checkHeight();\n    // open a file in the viewer\n    if (!!this._src) {\n      const options = {\n        password: this.password\n      };\n      (<any>window).PDFViewerApplication.open(this._src, options);\n    }\n    setTimeout(() => {\n      if (this.page) {\n        (<any>window).PDFViewerApplication.page = this.page;\n      }\n    }, 100);\n  }\n\n  private selectCursorTool() {\n    (<any>window).PDFViewerApplication.eventBus.dispatch('switchcursortool', { tool: this.handTool ? 1 : 0 });\n  }\n\n  public ngOnDestroy(): void {\n    NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized = false;\n    if (this.initTimeout) {\n      clearTimeout(this.initTimeout);\n      this.initTimeout = undefined;\n    }\n    const app = (<any>window).PDFViewerApplication;\n    if (app) {\n      app.cleanup();\n      app.close();\n      if (app._boundEvents) {\n        app.unbindWindowEvents();\n      }\n      const bus = app.eventBus as any;\n      if (bus) {\n        app.unbindEvents();\n        for (const key in bus._listeners) {\n          if (bus._listeners[key]) {\n            bus._listeners[key] = undefined;\n          }\n        }\n      }\n      app.eventBus = null;\n    }\n\n    const body = document.getElementsByTagName('body');\n    if (body[0]) {\n      const topLevelElements = body[0].children;\n      for (let i = topLevelElements.length - 1; i >= 0; i--) {\n        const e = topLevelElements.item(i);\n        if (e && e.id === 'printContainer') {\n          body[0].removeChild(e);\n        } else if (e && e.id === 'fileInput') {\n          body[0].removeChild(e);\n        }\n      }\n    }\n  }\n\n  private isSecondaryMenuVisible(): boolean {\n    const visible =\n      this.showHandToolButton ||\n      this.showPagingButtons ||\n      this.showPropertiesButton ||\n      this.showRotateButton ||\n      this.showScrollingButton ||\n      this.showRotateButton ||\n      this.showSpreadButton;\n    if (visible) {\n      return true;\n    }\n    return false;\n  }\n\n  private isPrimaryMenuVisible(): boolean {\n    const visible =\n      this.showBookmarkButton ||\n      this.showDownloadButton ||\n      this.showFindButton ||\n      this.showOpenFileButton ||\n      this.showPagingButtons ||\n      this.showPresentationModeButton ||\n      this.showPrintButton ||\n      this.showPropertiesButton ||\n      this.showSidebarButton ||\n      this.showSecondaryToolbarButton ||\n      this.showZoomButtons;\n\n    if (visible) {\n      return true;\n    }\n    return false;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      if ('src' in changes) {\n        if (!!this._src) {\n          this.overrideDefaultSettings();\n          (<any>window).PDFViewerApplication.open(this._src);\n        }\n      }\n      if ('zoom' in changes) {\n        this.setZoom();\n      }\n\n      if ('handTool' in changes) {\n        this.selectCursorTool();\n      }\n      if ('page' in changes) {\n        if (this.page) {\n          (<any>window).PDFViewerApplication.page = this.page;\n        }\n      }\n      if ('filenameForDownload' in changes) {\n        (<any>window).PDFViewerApplication.appConfig.filenameForDownload = this.filenameForDownload;\n      }\n      if ('nameddest' in changes) {\n        if (this.nameddest) {\n          (<any>window).PDFViewerApplication.pdfLinkService.navigateTo(this.nameddest);\n        }\n      }\n\n      if ('spread' in changes) {\n        if (this.spread === 'even') {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 2;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 2;\n          this.onSpreadChange('even');\n        } else if (this.spread === 'odd') {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 1;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 1;\n          this.onSpreadChange('odd');\n        } else {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 0;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 0;\n          this.onSpreadChange('off');\n        }\n      }\n\n      this.primaryMenuVisible = true;\n      if (!this.isSecondaryMenuVisible()) {\n        this.showSecondaryToolbarButton = false;\n      }\n      if (!this.showSecondaryToolbarButton) {\n        if (!this.isPrimaryMenuVisible()) {\n          this.primaryMenuVisible = false;\n        }\n      }\n      this.calcViewerPositionTop();\n    }\n  }\n\n  private setZoom() {\n    let zoomAsNumber = this.zoom;\n    if (String(zoomAsNumber).endsWith('%')) {\n      zoomAsNumber = Number(String(zoomAsNumber).replace('%', '')) / 100;\n    } else if (!isNaN(Number(zoomAsNumber))) {\n      zoomAsNumber = Number(zoomAsNumber) / 100;\n    }\n    if (!zoomAsNumber) {\n      zoomAsNumber = 'auto';\n    }\n    if ((<any>window).PDFViewerApplication) {\n      (<any>window).PDFViewerApplicationOptions.set('defaultZoomValue', zoomAsNumber);\n    }\n    if ((<any>window).PDFViewerApplication.pdfViewer) {\n      (<any>window).PDFViewerApplication.pdfViewer.currentScaleValue = zoomAsNumber;\n    }\n  }\n\n  public onResize(): void {\n    clearTimeout(this.resizeTimeout);\n    this.resizeTimeout = setTimeout(this.doResize, 100);\n  }\n\n  private doResize(): void {\n    const pdfViewer = document.getElementsByClassName('html');\n    if (pdfViewer && pdfViewer.length > 0) {\n      const toolbar = pdfViewer[0].getElementsByClassName('toolbar');\n      if (toolbar && toolbar.length > 0) {\n        const width = toolbar[0].clientWidth;\n        if (window.innerWidth - width > 50) {\n          const mediumElements = toolbar[0].getElementsByClassName('hiddenMediumView');\n          for (let i = 0; i < mediumElements.length; i++) {\n            const elt = mediumElements[i] as HTMLElement;\n            if (width < 650) {\n              elt.classList.add('hidden');\n            } else {\n              elt.classList.remove('hidden');\n            }\n          }\n          const smallElements = toolbar[0].getElementsByClassName('hiddenSmallView');\n          for (let i = 0; i < smallElements.length; i++) {\n            const elt = smallElements[i] as HTMLElement;\n            if (width < 590) {\n              elt.classList.add('hidden');\n            } else {\n              elt.classList.remove('hidden');\n            }\n          }\n\n          const tinyElement = document.getElementById('scaleSelectContainer');\n          const tiny = tinyElement as HTMLElement;\n          if (width < 485) {\n            // not perfect, but good first approximation\n            tiny.classList.add('hidden');\n          } else {\n            tiny.classList.remove('hidden');\n          }\n        }\n      }\n\n      /* TODO: this is the complete list of items to consider:\n    @media all and (max-width: 700px) {\n      #outerContainer .hiddenMediumView {\n        display: none;\n      }\n      #outerContainer .visibleMediumView {\n        display: inherit;\n      }\n    }\n\n    @media all and (max-width: 640px) {\n      .hiddenSmallView, .hiddenSmallView * {\n        display: none;\n      }\n      .visibleSmallView {\n        display: inherit;\n      }\n      .toolbarButtonSpacer {\n        width: 0;\n      }\n      html[dir='ltr'] .findbar {\n        left: 38px;\n      }\n      html[dir='rtl'] .findbar {\n        right: 38px;\n      }\n    }\n\n    @media all and (max-width: 535px) {\n      #scaleSelectContainer {\n        display: none;\n      }\n    }\n    */\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxExtendedPdfViewerComponent } from './ngx-extended-pdf-viewer.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxExtendedPdfViewerService {\n  constructor() {}\n\n  public find(text: string): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call find() later.\");\n      return false;\n    } else {\n      const inputField = document.getElementById('findInput');\n      if (inputField) {\n        inputField.setAttribute('value', text);\n        inputField.dispatchEvent(new Event('input'));\n        return true;\n      } else {\n        // tslint:disable-next-line:quotemark\n        console.error(\"Unexpected error: the input field used to search isn't part of the DOM.\");\n        return false;\n      }\n    }\n  }\n\n  public findNext(): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call findNext() later.\");\n      return false;\n    } else {\n      const button = document.getElementById('findNext');\n      if (button) {\n        button.click();\n        return true;\n      }\n      return false;\n    }\n  }\n\n  public findPrevious(): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call findPrevious() later.\");\n      return false;\n    } else {\n      const button = document.getElementById('findPrevious');\n      if (button) {\n        button.click();\n        return true;\n      }\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxExtendedPdfViewerComponent } from './ngx-extended-pdf-viewer.component';\nimport { NgxExtendedPdfViewerService } from './ngx-extended-pdf-viewer.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxExtendedPdfViewerComponent],\n  providers: [NgxExtendedPdfViewerService],\n  exports: [NgxExtendedPdfViewerComponent]\n})\nexport class NgxExtendedPdfViewerModule {}\n"]}